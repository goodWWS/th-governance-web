@use 'sass:color';
@use './variables' as *;

// 清除浮动
@mixin clearfix {
  &::after {
    content: '';
    display: table;
    clear: both;
  }
}

// 文本省略号
@mixin text-ellipsis($lines: 1) {
  @if $lines == 1 {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  } @else {
    display: -webkit-box;
    -webkit-line-clamp: $lines;
    -webkit-box-orient: vertical;
    overflow: hidden;
    text-overflow: ellipsis;
  }
}

// 居中对齐
@mixin center($position: absolute) {
  position: $position;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

// Flex 布局
@mixin flex($direction: row, $justify: flex-start, $align: stretch, $wrap: nowrap) {
  display: flex;
  flex-direction: $direction;
  justify-content: $justify;
  align-items: $align;
  flex-wrap: $wrap;
}

// 响应式断点
@mixin respond-to($breakpoint) {
  @if $breakpoint == xs {
    @media (max-width: #{$screen-xs - 1px}) {
      @content;
    }
  }
  @if $breakpoint == sm {
    @media (min-width: #{$screen-sm}) {
      @content;
    }
  }
  @if $breakpoint == md {
    @media (min-width: #{$screen-md}) {
      @content;
    }
  }
  @if $breakpoint == lg {
    @media (min-width: #{$screen-lg}) {
      @content;
    }
  }
  @if $breakpoint == xl {
    @media (min-width: #{$screen-xl}) {
      @content;
    }
  }
  @if $breakpoint == xxl {
    @media (min-width: #{$screen-xxl}) {
      @content;
    }
  }
}

// 按钮样式
@mixin button-variant($color, $background, $border) {
  color: $color;
  background-color: $background;
  border-color: $border;

  &:hover,
  &:focus {
    color: $color;
    background-color: color.adjust($background, $lightness: 5%);
    border-color: color.adjust($border, $lightness: 5%);
  }

  &:active {
    color: $color;
    background-color: color.adjust($background, $lightness: -5%);
    border-color: color.adjust($border, $lightness: -5%);
  }

  &:disabled {
    color: $text-color-quaternary;
    background-color: $gray-3;
    border-color: $border-color;
    cursor: not-allowed;
  }
}

// 卡片样式
@mixin card($padding: $spacing-lg, $radius: $border-radius-base) {
  background: $background-color-container;
  border-radius: $radius;
  box-shadow: $box-shadow-card;
  padding: $padding;
  transition: box-shadow $animation-duration-base $ease-out;

  &:hover {
    box-shadow: $box-shadow-base;
  }
}

// 输入框样式
@mixin input-variant($border-color: $border-color, $focus-color: $primary-color) {
  border: 1px solid $border-color;
  border-radius: $border-radius-base;
  padding: $spacing-sm $spacing-md;
  transition: all $animation-duration-base $ease-out;

  &:focus {
    border-color: $focus-color;
    box-shadow: 0 0 0 2px color.adjust($focus-color, $alpha: -0.8);
    outline: none;
  }

  &:hover {
    border-color: $focus-color;
  }

  &:disabled {
    background-color: $gray-3;
    border-color: $border-color;
    color: $text-color-quaternary;
    cursor: not-allowed;
  }
}

// 动画
@mixin fade-in($duration: $animation-duration-base) {
  animation: fadeIn $duration $ease-out;
}

@mixin slide-in($direction: left, $duration: $animation-duration-base) {
  animation: slideIn#{capitalize($direction)} $duration $ease-out;
}

// 滚动条样式
@mixin scrollbar($width: 6px, $track-color: transparent, $thumb-color: rgba(0, 0, 0, 0.2)) {
  &::-webkit-scrollbar {
    width: $width;
    height: $width;
  }

  &::-webkit-scrollbar-track {
    background: $track-color;
  }

  &::-webkit-scrollbar-thumb {
    background: $thumb-color;
    border-radius: $width / 2;
    
    &:hover {
      background: color.adjust($thumb-color, $lightness: -10%);
    }
  }
}

// 阴影变体
@mixin box-shadow-variant($level: 1) {
  @if $level == 1 {
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);
  } @else if $level == 2 {
    box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);
  } @else if $level == 3 {
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);
  } @else if $level == 4 {
    box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);
  } @else if $level == 5 {
    box-shadow: 0 19px 38px rgba(0, 0, 0, 0.30), 0 15px 12px rgba(0, 0, 0, 0.22);
  }
}

// 渐变背景
@mixin gradient-background($start-color, $end-color, $direction: to right) {
  background: linear-gradient($direction, $start-color, $end-color);
}

// 三角形
@mixin triangle($size, $color, $direction: up) {
  width: 0;
  height: 0;
  border-style: solid;

  @if $direction == up {
    border-left: $size solid transparent;
    border-right: $size solid transparent;
    border-bottom: $size solid $color;
  } @else if $direction == down {
    border-left: $size solid transparent;
    border-right: $size solid transparent;
    border-top: $size solid $color;
  } @else if $direction == left {
    border-top: $size solid transparent;
    border-bottom: $size solid transparent;
    border-right: $size solid $color;
  } @else if $direction == right {
    border-top: $size solid transparent;
    border-bottom: $size solid transparent;
    border-left: $size solid $color;
  }
}